; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\delay.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\delay.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\bsp -I..\bsp\test -I..\bsp\usblib -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\uart -I..\..\..\..\..\Device\MM32F103\Include -I..\HARDWARE\KEY -I..\..\..\..\..\Device\CMSIS\KEIL_CORE -IF:\work\8月\F103n、F031n样例制作\MM32F103RegLib_MiniBoard_Ver1.0.0\MM32F103RegLib_MiniBoard_libReg\MBF103PF_reg\USB\USB_Keyboard\KEIL_PRJ\RTE\_projectgroup -IC:\Keil_v5\ARM\PACK\MindMotion\MM32F103_DFP\1.4.3\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\PACK\MindMotion\MM32L3xx_DFP\1.0.3\Device\MM32L3xx\Include -D__UVISION_VERSION=522 -DMM32F103CBT -DF103_N_VERSION --omf_browse=.\objects\delay.crf ..\SYSTEM\delay\delay.c]
                          THUMB

                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;10     //SYSCLK:系统时钟
;;;11     void delay_init()
000000  f04f20e0          MOV      r0,#0xe000e000
;;;12     {
;;;13         SysTick->CTRL &=0xFFFFFFFB;//选择外部时钟  HCLK/8
000004  6900              LDR      r0,[r0,#0x10]
000006  f0200004          BIC      r0,r0,#4
00000a  f04f21e0          MOV      r1,#0xe000e000
00000e  6108              STR      r0,[r1,#0x10]
;;;14         /*
;;;15         9.1.1 系统嘀嗒(SysTick)校准值寄存器
;;;16         系统嘀嗒校准值固定为9000，当系统嘀嗒时钟设定为9MHz(HCLK/8的最大值)，产生1ms时间基准。	
;;;17         */	
;;;18         fac_us=SystemCoreClock/8000000;				//为系统时钟的1/8  
000010  4809              LDR      r0,|L1.56|
000012  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000014  4909              LDR      r1,|L1.60|
000016  fbb0f0f1          UDIV     r0,r0,r1
00001a  4909              LDR      r1,|L1.64|
00001c  7008              STRB     r0,[r1,#0]
;;;19         fac_ms=(u16)fac_us*1000;					//非OS下,代表每个ms需要的systick时钟数   
00001e  4608              MOV      r0,r1
000020  7800              LDRB     r0,[r0,#0]  ; fac_us
000022  eb000140          ADD      r1,r0,r0,LSL #1
000026  ebc110c0          RSB      r0,r1,r0,LSL #7
00002a  f64f71ff          MOV      r1,#0xffff
00002e  ea0100c0          AND      r0,r1,r0,LSL #3
000032  4904              LDR      r1,|L1.68|
000034  8008              STRH     r0,[r1,#0]
;;;20     }								    
000036  4770              BX       lr
;;;21     
                          ENDP

                  |L1.56|
                          DCD      SystemCoreClock
                  |L1.60|
                          DCD      0x007a1200
                  |L1.64|
                          DCD      fac_us
                  |L1.68|
                          DCD      fac_ms

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;42     //对72M条件下,nms<=1864 
;;;43     void delay_ms(u16 nms)
000000  4601              MOV      r1,r0
;;;44     {	 		  	  
;;;45         u32 temp;		   
;;;46         SysTick->LOAD=(u32)nms*fac_ms;			//时间加载(SysTick->LOAD为24bit)
000002  4a0d              LDR      r2,|L2.56|
000004  8812              LDRH     r2,[r2,#0]  ; fac_ms
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;47         SysTick->VAL =0x00;           			//清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;48         SysTick->CTRL=0x01 ;          			//开始倒数  
000012  2201              MOVS     r2,#1
000014  611a              STR      r2,[r3,#0x10]
;;;49         do
000016  bf00              NOP      
                  |L2.24|
;;;50         {
;;;51             temp=SysTick->CTRL;
000018  f04f22e0          MOV      r2,#0xe000e000
00001c  6910              LDR      r0,[r2,#0x10]
;;;52         }while((temp&0x01)&&!(temp&(1<<16)));	//等待时间到达   
00001e  f0000201          AND      r2,r0,#1
000022  b11a              CBZ      r2,|L2.44|
000024  f4003280          AND      r2,r0,#0x10000
000028  2a00              CMP      r2,#0
00002a  d0f5              BEQ      |L2.24|
                  |L2.44|
;;;53         SysTick->CTRL=0x00;      	 			//关闭计数器
00002c  2200              MOVS     r2,#0
00002e  f04f23e0          MOV      r3,#0xe000e000
000032  611a              STR      r2,[r3,#0x10]
;;;54         SysTick->VAL =0X00;       				//清空计数器	  	    
000034  619a              STR      r2,[r3,#0x18]
;;;55     } 
000036  4770              BX       lr
;;;56     
                          ENDP

                  |L2.56|
                          DCD      fac_ms

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;23     //nus为要延时的us数.		    								   
;;;24     void delay_us(u32 nus)
000000  4601              MOV      r1,r0
;;;25     {		
;;;26         u32 temp;	    	 
;;;27         SysTick->LOAD=nus*fac_us; 				//时间加载	  		 
000002  4a0d              LDR      r2,|L3.56|
000004  7812              LDRB     r2,[r2,#0]  ; fac_us
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;28         SysTick->VAL=0x00;        				//清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;29         SysTick->CTRL=0x01 ;      				//开始倒数 	 
000012  2201              MOVS     r2,#1
000014  611a              STR      r2,[r3,#0x10]
;;;30         do
000016  bf00              NOP      
                  |L3.24|
;;;31         {
;;;32             temp=SysTick->CTRL;
000018  f04f22e0          MOV      r2,#0xe000e000
00001c  6910              LDR      r0,[r2,#0x10]
;;;33         }while((temp&0x01)&&!(temp&(1<<16)));	//等待时间到达   
00001e  f0000201          AND      r2,r0,#1
000022  b11a              CBZ      r2,|L3.44|
000024  f4003280          AND      r2,r0,#0x10000
000028  2a00              CMP      r2,#0
00002a  d0f5              BEQ      |L3.24|
                  |L3.44|
;;;34         SysTick->CTRL=0x00;      	 			//关闭计数器
00002c  2200              MOVS     r2,#0
00002e  f04f23e0          MOV      r3,#0xe000e000
000032  611a              STR      r2,[r3,#0x10]
;;;35         SysTick->VAL =0X00;       				//清空计数器	 
000034  619a              STR      r2,[r3,#0x18]
;;;36     }
000036  4770              BX       lr
;;;37     //延时nms
                          ENDP

                  |L3.56|
                          DCD      fac_us

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\SYSTEM\\delay\\delay.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____REV16|
#line 129 "..\\..\\..\\..\\..\\Device\\CMSIS\\KEIL_CORE\\core_cmInstr.h"
|__asm___7_delay_c_f6a9c549____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____REVSH|
#line 144
|__asm___7_delay_c_f6a9c549____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____RRX|
#line 300
|__asm___7_delay_c_f6a9c549____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
