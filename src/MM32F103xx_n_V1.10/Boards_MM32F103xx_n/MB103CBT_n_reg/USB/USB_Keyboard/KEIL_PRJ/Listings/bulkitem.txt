; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\bulkitem.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\bulkitem.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\bsp -I..\bsp\test -I..\bsp\usblib -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\uart -I..\..\..\..\..\Device\MM32F103\Include -I..\HARDWARE\KEY -I..\..\..\..\..\Device\CMSIS\KEIL_CORE -IF:\work\8月\F103n、F031n样例制作\MM32F103RegLib_MiniBoard_Ver1.0.0\MM32F103RegLib_MiniBoard_libReg\MBF103PF_reg\USB\USB_Keyboard\KEIL_PRJ\RTE\_projectgroup -IC:\Keil_v5\ARM\PACK\MindMotion\MM32F103_DFP\1.4.3\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\PACK\MindMotion\MM32L3xx_DFP\1.0.3\Device\MM32L3xx\Include -D__UVISION_VERSION=522 -DMM32F103CBT -DF103_N_VERSION --omf_browse=.\objects\bulkitem.crf ..\bsp\usblib\bulkitem.c]
                          THUMB

                          AREA ||i.ScsiCmdInquiry||, CODE, READONLY, ALIGN=2

                  ScsiCmdInquiry PROC
;;;221    
;;;222    void ScsiCmdInquiry( void)          							// 0x12
000000  b510              PUSH     {r4,lr}
;;;223    {
;;;224        switch( usb_running_state )
000002  481f              LDR      r0,|L1.128|
000004  7800              LDRB     r0,[r0,#0]  ; usb_running_state
000006  2810              CMP      r0,#0x10
000008  d004              BEQ      |L1.20|
00000a  2811              CMP      r0,#0x11
00000c  d00c              BEQ      |L1.40|
00000e  2814              CMP      r0,#0x14
000010  d12f              BNE      |L1.114|
000012  e02b              B        |L1.108|
                  |L1.20|
;;;225        {
;;;226        case    USB_BULK_CBW :
;;;227            {
;;;228                p_send_buf = (uint32)InquriySendBack;
000014  481b              LDR      r0,|L1.132|
000016  491c              LDR      r1,|L1.136|
000018  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;229                send_residue = sizeof(InquriySendBack);
00001a  2024              MOVS     r0,#0x24
00001c  491b              LDR      r1,|L1.140|
00001e  6008              STR      r0,[r1,#0]  ; send_residue
;;;230                usb_running_state = USB_BULK_IN ;
000020  2011              MOVS     r0,#0x11
000022  4917              LDR      r1,|L1.128|
000024  7008              STRB     r0,[r1,#0]
;;;231                break ;
000026  e028              B        |L1.122|
                  |L1.40|
;;;232            }
;;;233        case    USB_BULK_IN :
;;;234            {
;;;235                uint32 cnt = MIN(send_residue,EPn_MAX_PACKAGE_SIZE);
000028  4818              LDR      r0,|L1.140|
00002a  6800              LDR      r0,[r0,#0]  ; send_residue
00002c  2840              CMP      r0,#0x40
00002e  d202              BCS      |L1.54|
000030  4816              LDR      r0,|L1.140|
000032  6800              LDR      r0,[r0,#0]  ; send_residue
000034  e000              B        |L1.56|
                  |L1.54|
000036  2040              MOVS     r0,#0x40
                  |L1.56|
000038  4604              MOV      r4,r0
;;;236                p_send_buf = device_tx_fifo(p_send_buf,cnt,FALSE);
00003a  2200              MOVS     r2,#0
00003c  4621              MOV      r1,r4
00003e  4812              LDR      r0,|L1.136|
000040  6800              LDR      r0,[r0,#0]  ; p_send_buf
000042  f7fffffe          BL       device_tx_fifo
000046  4910              LDR      r1,|L1.136|
000048  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;237                send_residue -= cnt;
00004a  4810              LDR      r0,|L1.140|
00004c  6800              LDR      r0,[r0,#0]  ; send_residue
00004e  1b00              SUBS     r0,r0,r4
000050  490e              LDR      r1,|L1.140|
000052  6008              STR      r0,[r1,#0]  ; send_residue
;;;238                if(send_residue == 0 )
000054  4608              MOV      r0,r1
000056  6800              LDR      r0,[r0,#0]  ; send_residue
000058  b938              CBNZ     r0,|L1.106|
;;;239                {
;;;240                    USB_Prepare_CSW(send_residue,CSW_CMD_PASSED);
00005a  2100              MOVS     r1,#0
00005c  480b              LDR      r0,|L1.140|
00005e  6800              LDR      r0,[r0,#0]  ; send_residue
000060  f7fffffe          BL       USB_Prepare_CSW
;;;241                    usb_running_state = USB_BULK_CSW;
000064  2014              MOVS     r0,#0x14
000066  4906              LDR      r1,|L1.128|
000068  7008              STRB     r0,[r1,#0]
                  |L1.106|
;;;242                }
;;;243                break;
00006a  e006              B        |L1.122|
                  |L1.108|
;;;244            }
;;;245        case    USB_BULK_CSW :
;;;246            {
;;;247                SendCSWBack() ;
00006c  f7fffffe          BL       SendCSWBack
;;;248                break ;
000070  e003              B        |L1.122|
                  |L1.114|
;;;249            }
;;;250        default :
;;;251            {
;;;252                usb_running_state = USB_IDLE ;
000072  20ff              MOVS     r0,#0xff
000074  4902              LDR      r1,|L1.128|
000076  7008              STRB     r0,[r1,#0]
;;;253                break ;
000078  bf00              NOP      
                  |L1.122|
00007a  bf00              NOP                            ;231
;;;254            }
;;;255        }
;;;256    }
00007c  bd10              POP      {r4,pc}
;;;257    
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      usb_running_state
                  |L1.132|
                          DCD      InquriySendBack
                  |L1.136|
                          DCD      p_send_buf
                  |L1.140|
                          DCD      send_residue

                          AREA ||i.ScsiCmdRequestSense||, CODE, READONLY, ALIGN=2

                  ScsiCmdRequestSense PROC
;;;257    
;;;258    void ScsiCmdRequestSense( void)          						// 0x03
000000  b510              PUSH     {r4,lr}
;;;259    {
;;;260        switch( usb_running_state )
000002  481f              LDR      r0,|L2.128|
000004  7800              LDRB     r0,[r0,#0]  ; usb_running_state
000006  2810              CMP      r0,#0x10
000008  d004              BEQ      |L2.20|
00000a  2811              CMP      r0,#0x11
00000c  d00c              BEQ      |L2.40|
00000e  2814              CMP      r0,#0x14
000010  d12f              BNE      |L2.114|
000012  e02b              B        |L2.108|
                  |L2.20|
;;;261        {
;;;262        case    USB_BULK_CBW :
;;;263            {
;;;264                p_send_buf = (uint32)SenseData;
000014  481b              LDR      r0,|L2.132|
000016  491c              LDR      r1,|L2.136|
000018  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;265                send_residue = sizeof(SenseData);
00001a  2012              MOVS     r0,#0x12
00001c  491b              LDR      r1,|L2.140|
00001e  6008              STR      r0,[r1,#0]  ; send_residue
;;;266                usb_running_state = USB_BULK_IN ;
000020  2011              MOVS     r0,#0x11
000022  4917              LDR      r1,|L2.128|
000024  7008              STRB     r0,[r1,#0]
;;;267                break ;
000026  e028              B        |L2.122|
                  |L2.40|
;;;268            }
;;;269        case    USB_BULK_IN :
;;;270            {
;;;271                uint32 cnt = MIN(send_residue,EPn_MAX_PACKAGE_SIZE);
000028  4818              LDR      r0,|L2.140|
00002a  6800              LDR      r0,[r0,#0]  ; send_residue
00002c  2840              CMP      r0,#0x40
00002e  d202              BCS      |L2.54|
000030  4816              LDR      r0,|L2.140|
000032  6800              LDR      r0,[r0,#0]  ; send_residue
000034  e000              B        |L2.56|
                  |L2.54|
000036  2040              MOVS     r0,#0x40
                  |L2.56|
000038  4604              MOV      r4,r0
;;;272                p_send_buf = device_tx_fifo(p_send_buf,cnt,FALSE);
00003a  2200              MOVS     r2,#0
00003c  4621              MOV      r1,r4
00003e  4812              LDR      r0,|L2.136|
000040  6800              LDR      r0,[r0,#0]  ; p_send_buf
000042  f7fffffe          BL       device_tx_fifo
000046  4910              LDR      r1,|L2.136|
000048  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;273                send_residue -= cnt;
00004a  4810              LDR      r0,|L2.140|
00004c  6800              LDR      r0,[r0,#0]  ; send_residue
00004e  1b00              SUBS     r0,r0,r4
000050  490e              LDR      r1,|L2.140|
000052  6008              STR      r0,[r1,#0]  ; send_residue
;;;274                if(send_residue == 0 )
000054  4608              MOV      r0,r1
000056  6800              LDR      r0,[r0,#0]  ; send_residue
000058  b938              CBNZ     r0,|L2.106|
;;;275                {
;;;276                    USB_Prepare_CSW(send_residue,CSW_CMD_PASSED);
00005a  2100              MOVS     r1,#0
00005c  480b              LDR      r0,|L2.140|
00005e  6800              LDR      r0,[r0,#0]  ; send_residue
000060  f7fffffe          BL       USB_Prepare_CSW
;;;277                    usb_running_state = USB_BULK_CSW;
000064  2014              MOVS     r0,#0x14
000066  4906              LDR      r1,|L2.128|
000068  7008              STRB     r0,[r1,#0]
                  |L2.106|
;;;278                }
;;;279                break;
00006a  e006              B        |L2.122|
                  |L2.108|
;;;280            }
;;;281        case    USB_BULK_CSW :
;;;282            {
;;;283                SendCSWBack() ;
00006c  f7fffffe          BL       SendCSWBack
;;;284                break ;
000070  e003              B        |L2.122|
                  |L2.114|
;;;285            }
;;;286        default :
;;;287            {
;;;288                usb_running_state = USB_IDLE ;
000072  20ff              MOVS     r0,#0xff
000074  4902              LDR      r1,|L2.128|
000076  7008              STRB     r0,[r1,#0]
;;;289                break ;
000078  bf00              NOP      
                  |L2.122|
00007a  bf00              NOP                            ;267
;;;290            }
;;;291        }
;;;292    }
00007c  bd10              POP      {r4,pc}
;;;293    void _cmd_common_handle( void)     								// 0x00
                          ENDP

00007e  0000              DCW      0x0000
                  |L2.128|
                          DCD      usb_running_state
                  |L2.132|
                          DCD      SenseData
                  |L2.136|
                          DCD      p_send_buf
                  |L2.140|
                          DCD      send_residue

                          AREA ||i.SendCSWBack||, CODE, READONLY, ALIGN=2

                  SendCSWBack PROC
;;;48     //========================= Bulk Tools ==============================
;;;49     void SendCSWBack()
000000  b510              PUSH     {r4,lr}
;;;50     {
;;;51         uint32 cnt = MIN(send_residue,EPn_MAX_PACKAGE_SIZE);
000002  4811              LDR      r0,|L3.72|
000004  6800              LDR      r0,[r0,#0]  ; send_residue
000006  2840              CMP      r0,#0x40
000008  d202              BCS      |L3.16|
00000a  480f              LDR      r0,|L3.72|
00000c  6800              LDR      r0,[r0,#0]  ; send_residue
00000e  e000              B        |L3.18|
                  |L3.16|
000010  2040              MOVS     r0,#0x40
                  |L3.18|
000012  4604              MOV      r4,r0
;;;52     #ifdef USB_CBWCSW_DMA_MODE
;;;53         p_send_buf = device_tx_fifo(p_send_buf,cnt,TRUE);
;;;54     #else
;;;55         p_send_buf = device_tx_fifo(p_send_buf,cnt,FALSE);
000014  2200              MOVS     r2,#0
000016  4621              MOV      r1,r4
000018  480c              LDR      r0,|L3.76|
00001a  6800              LDR      r0,[r0,#0]  ; p_send_buf
00001c  f7fffffe          BL       device_tx_fifo
000020  490a              LDR      r1,|L3.76|
000022  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;56     #endif
;;;57         send_residue -= cnt;
000024  4808              LDR      r0,|L3.72|
000026  6800              LDR      r0,[r0,#0]  ; send_residue
000028  1b00              SUBS     r0,r0,r4
00002a  4907              LDR      r1,|L3.72|
00002c  6008              STR      r0,[r1,#0]  ; send_residue
;;;58         if(send_residue == 0 )
00002e  4608              MOV      r0,r1
000030  6800              LDR      r0,[r0,#0]  ; send_residue
000032  b940              CBNZ     r0,|L3.70|
;;;59         {
;;;60             usb_running_state = USB_IDLE ;
000034  20ff              MOVS     r0,#0xff
000036  4906              LDR      r1,|L3.80|
000038  7008              STRB     r0,[r1,#0]
;;;61             p_recv_buf = (uint32)usb_cbw_buf;
00003a  4806              LDR      r0,|L3.84|
00003c  4906              LDR      r1,|L3.88|
00003e  6008              STR      r0,[r1,#0]  ; p_recv_buf
;;;62             recv_residue = sizeof(usb_cbw_buf);
000040  201f              MOVS     r0,#0x1f
000042  4906              LDR      r1,|L3.92|
000044  6008              STR      r0,[r1,#0]  ; recv_residue
                  |L3.70|
;;;63         }
;;;64     }
000046  bd10              POP      {r4,pc}
;;;65     
                          ENDP

                  |L3.72|
                          DCD      send_residue
                  |L3.76|
                          DCD      p_send_buf
                  |L3.80|
                          DCD      usb_running_state
                  |L3.84|
                          DCD      usb_cbw_buf
                  |L3.88|
                          DCD      p_recv_buf
                  |L3.92|
                          DCD      recv_residue

                          AREA ||i.USB_Prepare_CSW||, CODE, READONLY, ALIGN=2

                  USB_Prepare_CSW PROC
;;;65     
;;;66     void USB_Prepare_CSW( uint32  num, uint32  state )
000000  2255              MOVS     r2,#0x55
;;;67     {
;;;68         //dCSWSignature byte[3]--byte[0]
;;;69         usb_csw_buf[0]=0x55;
000002  4b11              LDR      r3,|L4.72|
000004  701a              STRB     r2,[r3,#0]
;;;70         usb_csw_buf[1]=0x53;
000006  2253              MOVS     r2,#0x53
000008  705a              STRB     r2,[r3,#1]
;;;71         usb_csw_buf[2]=0x42;
00000a  2242              MOVS     r2,#0x42
00000c  709a              STRB     r2,[r3,#2]
;;;72         usb_csw_buf[3]=0x53;
00000e  2253              MOVS     r2,#0x53
000010  70da              STRB     r2,[r3,#3]
;;;73         //dCSWTag byte[7]--byte[4]
;;;74         usb_csw_buf[4]=dCBWTag[0];
000012  4a0e              LDR      r2,|L4.76|
000014  7812              LDRB     r2,[r2,#0]  ; dCBWTag
000016  711a              STRB     r2,[r3,#4]
;;;75         usb_csw_buf[5]=dCBWTag[1];
000018  4a0c              LDR      r2,|L4.76|
00001a  7852              LDRB     r2,[r2,#1]  ; dCBWTag
00001c  715a              STRB     r2,[r3,#5]
;;;76         usb_csw_buf[6]=dCBWTag[2];
00001e  4a0b              LDR      r2,|L4.76|
000020  7892              LDRB     r2,[r2,#2]  ; dCBWTag
000022  719a              STRB     r2,[r3,#6]
;;;77         usb_csw_buf[7]=dCBWTag[3];
000024  4a09              LDR      r2,|L4.76|
000026  78d2              LDRB     r2,[r2,#3]  ; dCBWTag
000028  71da              STRB     r2,[r3,#7]
;;;78         //dCSWDataResidue byte[11]--byte[8]
;;;79         usb_csw_buf[8]=(num>>0)&0xff;
00002a  7218              STRB     r0,[r3,#8]
;;;80         usb_csw_buf[9]=(num>>8)&0xFF;
00002c  0a02              LSRS     r2,r0,#8
00002e  725a              STRB     r2,[r3,#9]
;;;81         usb_csw_buf[10]=(num>>16)&0xFF;
000030  0c02              LSRS     r2,r0,#16
000032  729a              STRB     r2,[r3,#0xa]
;;;82         usb_csw_buf[11]=(num>>24)&0xFF;
000034  0e02              LSRS     r2,r0,#24
000036  72da              STRB     r2,[r3,#0xb]
;;;83         usb_csw_buf[12]=state;	
000038  7319              STRB     r1,[r3,#0xc]
;;;84         p_send_buf = (uint32)usb_csw_buf;
00003a  461a              MOV      r2,r3
00003c  4b04              LDR      r3,|L4.80|
00003e  601a              STR      r2,[r3,#0]  ; p_send_buf
;;;85         send_residue = sizeof(usb_csw_buf);
000040  220d              MOVS     r2,#0xd
000042  4b04              LDR      r3,|L4.84|
000044  601a              STR      r2,[r3,#0]  ; send_residue
;;;86     }
000046  4770              BX       lr
;;;87     
                          ENDP

                  |L4.72|
                          DCD      usb_csw_buf
                  |L4.76|
                          DCD      dCBWTag
                  |L4.80|
                          DCD      p_send_buf
                  |L4.84|
                          DCD      send_residue

                          AREA ||i._cmd_common_handle||, CODE, READONLY, ALIGN=2

                  _cmd_common_handle PROC
;;;292    }
;;;293    void _cmd_common_handle( void)     								// 0x00
000000  b510              PUSH     {r4,lr}
;;;294    {
;;;295        switch( usb_running_state )
000002  4819              LDR      r0,|L5.104|
000004  7800              LDRB     r0,[r0,#0]  ; usb_running_state
000006  2810              CMP      r0,#0x10
000008  d004              BEQ      |L5.20|
00000a  2814              CMP      r0,#0x14
00000c  d022              BEQ      |L5.84|
00000e  2815              CMP      r0,#0x15
000010  d123              BNE      |L5.90|
000012  e00f              B        |L5.52|
                  |L5.20|
;;;296        {
;;;297        case    USB_BULK_CBW :
;;;298            {
;;;299                if( CBWCB[0] == TEST_UNIT_READY_OPCODE )
000014  4815              LDR      r0,|L5.108|
000016  7800              LDRB     r0,[r0,#0]  ; CBWCB
000018  b920              CBNZ     r0,|L5.36|
;;;300                    USB_Prepare_CSW(0x00,CSW_CMD_PASSED);
00001a  2100              MOVS     r1,#0
00001c  4608              MOV      r0,r1
00001e  f7fffffe          BL       USB_Prepare_CSW
000022  e003              B        |L5.44|
                  |L5.36|
;;;301                else
;;;302                    USB_Prepare_CSW(0x00,CSW_CMD_PASSED);
000024  2100              MOVS     r1,#0
000026  4608              MOV      r0,r1
000028  f7fffffe          BL       USB_Prepare_CSW
                  |L5.44|
;;;303                
;;;304    #ifdef USB_EP_STALL_TEST
;;;305                usb_in_stall_ix++;
;;;306                if(usb_in_stall_ix % 33==0x00)
;;;307                {
;;;308                    
;;;309                    USB->rEP_HALT = (1<<EPIN);
;;;310                    
;;;311                    USB_SEND_OPEN_STALL[EPIN] = TRUE;
;;;312                }
;;;313                if(USB_SEND_OPEN_STALL[EPIN]==TRUE)
;;;314                {
;;;315                    usb_running_state = USB_BULK_STALL;							
;;;316                    USB_Prepare_CSW(0x00,CSW_CMD_PASSED);
;;;317                }
;;;318                else
;;;319    #endif
;;;320                    usb_running_state = USB_BULK_CSW ;			
00002c  2014              MOVS     r0,#0x14
00002e  490e              LDR      r1,|L5.104|
000030  7008              STRB     r0,[r1,#0]
;;;321                break ;
000032  e016              B        |L5.98|
                  |L5.52|
;;;322            }
;;;323        case 	USB_BULK_STALL:
;;;324            {
;;;325                if((USB_SEND_OPEN_STALL[EPIN]==TRUE)||(USB_SEND_OPEN_STALL[EPOUT]==TRUE))
000034  480e              LDR      r0,|L5.112|
000036  7840              LDRB     r0,[r0,#1]  ; USB_SEND_OPEN_STALL
000038  2801              CMP      r0,#1
00003a  d003              BEQ      |L5.68|
00003c  480c              LDR      r0,|L5.112|
00003e  7880              LDRB     r0,[r0,#2]  ; USB_SEND_OPEN_STALL
000040  2801              CMP      r0,#1
000042  d103              BNE      |L5.76|
                  |L5.68|
;;;326                    usb_running_state = USB_BULK_STALL;							
000044  2015              MOVS     r0,#0x15
000046  4908              LDR      r1,|L5.104|
000048  7008              STRB     r0,[r1,#0]
00004a  e002              B        |L5.82|
                  |L5.76|
;;;327                else
;;;328                    usb_running_state = USB_BULK_CSW ;			
00004c  2014              MOVS     r0,#0x14
00004e  4906              LDR      r1,|L5.104|
000050  7008              STRB     r0,[r1,#0]
                  |L5.82|
;;;329                break;
000052  e006              B        |L5.98|
                  |L5.84|
;;;330            }
;;;331        case    USB_BULK_CSW :
;;;332            {
;;;333                SendCSWBack();
000054  f7fffffe          BL       SendCSWBack
;;;334                break ;
000058  e003              B        |L5.98|
                  |L5.90|
;;;335            }
;;;336        default :
;;;337            {
;;;338                usb_running_state = USB_IDLE ;
00005a  20ff              MOVS     r0,#0xff
00005c  4902              LDR      r1,|L5.104|
00005e  7008              STRB     r0,[r1,#0]
;;;339                break ;
000060  bf00              NOP      
                  |L5.98|
000062  bf00              NOP                            ;321
;;;340            }
;;;341        }    
;;;342    }
000064  bd10              POP      {r4,pc}
;;;343    
                          ENDP

000066  0000              DCW      0x0000
                  |L5.104|
                          DCD      usb_running_state
                  |L5.108|
                          DCD      CBWCB
                  |L5.112|
                          DCD      USB_SEND_OPEN_STALL

                          AREA ||i._op_code_23_handle||, CODE, READONLY, ALIGN=2

                  _op_code_23_handle PROC
;;;167    }
;;;168    void _op_code_23_handle( void)      							// read format capacities
000000  b570              PUSH     {r4-r6,lr}
;;;169    {
;;;170        uint32   temp;
;;;171        
;;;172        switch( usb_running_state )
000002  482b              LDR      r0,|L6.176|
000004  7800              LDRB     r0,[r0,#0]  ; usb_running_state
000006  2810              CMP      r0,#0x10
000008  d004              BEQ      |L6.20|
00000a  2811              CMP      r0,#0x11
00000c  d024              BEQ      |L6.88|
00000e  2814              CMP      r0,#0x14
000010  d147              BNE      |L6.162|
000012  e043              B        |L6.156|
                  |L6.20|
;;;173        {
;;;174        case    USB_BULK_CBW :
;;;175            {
;;;176                Op_23_SendBack[0] = 0x00;
000014  2000              MOVS     r0,#0
000016  4927              LDR      r1,|L6.180|
000018  7008              STRB     r0,[r1,#0]
;;;177                Op_23_SendBack[1] = 0x00;
00001a  7048              STRB     r0,[r1,#1]
;;;178                Op_23_SendBack[2] = 0x00;
00001c  7088              STRB     r0,[r1,#2]
;;;179                Op_23_SendBack[3] = 0x08;		    
00001e  2008              MOVS     r0,#8
000020  70c8              STRB     r0,[r1,#3]
;;;180                
;;;181                temp = ((USB_DISK_OFFSET_END - USB_DISK_OFFSET)>>9);// xxx/512
000022  2401              MOVS     r4,#1
;;;182                
;;;183                Op_23_SendBack[4] = 	(uint8)((temp & 0xff000000) >> 24);
000024  0e20              LSRS     r0,r4,#24
000026  7108              STRB     r0,[r1,#4]
;;;184                Op_23_SendBack[5] = 	(uint8)((temp & 0x00ff0000) >> 16);
000028  0c20              LSRS     r0,r4,#16
00002a  7148              STRB     r0,[r1,#5]
;;;185                Op_23_SendBack[6] = 	(uint8)((temp & 0x0000ff00) >>  8);
00002c  0a20              LSRS     r0,r4,#8
00002e  7188              STRB     r0,[r1,#6]
;;;186                Op_23_SendBack[7] = 	(uint8)((temp & 0x000000ff) >>  0);
000030  4608              MOV      r0,r1
000032  71c4              STRB     r4,[r0,#7]
;;;187                
;;;188                Op_23_SendBack[8] = 0x01; 							//unformatted media
000034  2001              MOVS     r0,#1
000036  7208              STRB     r0,[r1,#8]
;;;189                Op_23_SendBack[9] = 0x00;
000038  2000              MOVS     r0,#0
00003a  7248              STRB     r0,[r1,#9]
;;;190                Op_23_SendBack[10] = 0x02;
00003c  2002              MOVS     r0,#2
00003e  7288              STRB     r0,[r1,#0xa]
;;;191                Op_23_SendBack[11] = 0x00;
000040  2000              MOVS     r0,#0
000042  72c8              STRB     r0,[r1,#0xb]
;;;192                p_send_buf = (uint32)Op_23_SendBack;
000044  4608              MOV      r0,r1
000046  491c              LDR      r1,|L6.184|
000048  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;193                send_residue = sizeof(Op_23_SendBack);
00004a  200c              MOVS     r0,#0xc
00004c  491b              LDR      r1,|L6.188|
00004e  6008              STR      r0,[r1,#0]  ; send_residue
;;;194                usb_running_state = USB_BULK_IN ;
000050  2011              MOVS     r0,#0x11
000052  4917              LDR      r1,|L6.176|
000054  7008              STRB     r0,[r1,#0]
;;;195                break ;
000056  e028              B        |L6.170|
                  |L6.88|
;;;196            }
;;;197        case    USB_BULK_IN :
;;;198            {
;;;199                uint32 cnt = MIN(send_residue,EPn_MAX_PACKAGE_SIZE);
000058  4818              LDR      r0,|L6.188|
00005a  6800              LDR      r0,[r0,#0]  ; send_residue
00005c  2840              CMP      r0,#0x40
00005e  d202              BCS      |L6.102|
000060  4816              LDR      r0,|L6.188|
000062  6800              LDR      r0,[r0,#0]  ; send_residue
000064  e000              B        |L6.104|
                  |L6.102|
000066  2040              MOVS     r0,#0x40
                  |L6.104|
000068  4605              MOV      r5,r0
;;;200                p_send_buf = device_tx_fifo(p_send_buf,cnt,FALSE);
00006a  2200              MOVS     r2,#0
00006c  4629              MOV      r1,r5
00006e  4812              LDR      r0,|L6.184|
000070  6800              LDR      r0,[r0,#0]  ; p_send_buf
000072  f7fffffe          BL       device_tx_fifo
000076  4910              LDR      r1,|L6.184|
000078  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;201                send_residue -= cnt;
00007a  4810              LDR      r0,|L6.188|
00007c  6800              LDR      r0,[r0,#0]  ; send_residue
00007e  1b40              SUBS     r0,r0,r5
000080  490e              LDR      r1,|L6.188|
000082  6008              STR      r0,[r1,#0]  ; send_residue
;;;202                if(send_residue == 0 )
000084  4608              MOV      r0,r1
000086  6800              LDR      r0,[r0,#0]  ; send_residue
000088  b938              CBNZ     r0,|L6.154|
;;;203                {
;;;204                    USB_Prepare_CSW(send_residue,CSW_CMD_PASSED);
00008a  2100              MOVS     r1,#0
00008c  480b              LDR      r0,|L6.188|
00008e  6800              LDR      r0,[r0,#0]  ; send_residue
000090  f7fffffe          BL       USB_Prepare_CSW
;;;205                    usb_running_state = USB_BULK_CSW;
000094  2014              MOVS     r0,#0x14
000096  4906              LDR      r1,|L6.176|
000098  7008              STRB     r0,[r1,#0]
                  |L6.154|
;;;206                }
;;;207                break ;
00009a  e006              B        |L6.170|
                  |L6.156|
;;;208            }
;;;209        case    USB_BULK_CSW :
;;;210            {
;;;211                SendCSWBack() ;
00009c  f7fffffe          BL       SendCSWBack
;;;212                break ;
0000a0  e003              B        |L6.170|
                  |L6.162|
;;;213            }
;;;214        default :
;;;215            {
;;;216                usb_running_state = USB_IDLE ;
0000a2  20ff              MOVS     r0,#0xff
0000a4  4902              LDR      r1,|L6.176|
0000a6  7008              STRB     r0,[r1,#0]
;;;217                break ;
0000a8  bf00              NOP      
                  |L6.170|
0000aa  bf00              NOP                            ;195
;;;218            }
;;;219        }    
;;;220    }
0000ac  bd70              POP      {r4-r6,pc}
;;;221    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L6.176|
                          DCD      usb_running_state
                  |L6.180|
                          DCD      Op_23_SendBack
                  |L6.184|
                          DCD      p_send_buf
                  |L6.188|
                          DCD      send_residue

                          AREA ||i._read10_handle||, CODE, READONLY, ALIGN=2

                  _read10_handle PROC
;;;415    
;;;416    void _read10_handle( uint32 stand_request)      // 0x28
000000  b570              PUSH     {r4-r6,lr}
;;;417    {
000002  4604              MOV      r4,r0
;;;418        switch( usb_running_state )
000004  4824              LDR      r0,|L7.152|
000006  7800              LDRB     r0,[r0,#0]  ; usb_running_state
000008  2810              CMP      r0,#0x10
00000a  d004              BEQ      |L7.22|
00000c  2811              CMP      r0,#0x11
00000e  d017              BEQ      |L7.64|
000010  2814              CMP      r0,#0x14
000012  d13a              BNE      |L7.138|
000014  e036              B        |L7.132|
                  |L7.22|
;;;419        {
;;;420        case    USB_BULK_CBW :
;;;421            {
;;;422                covert_usb_2_flash( ) ;
000016  f7fffffe          BL       covert_usb_2_flash
;;;423                p_send_buf = ram_addr;
00001a  4820              LDR      r0,|L7.156|
00001c  6800              LDR      r0,[r0,#0]  ; ram_addr
00001e  4920              LDR      r1,|L7.160|
000020  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;424                if(stand_request)
000022  b12c              CBZ      r4,|L7.48|
;;;425                    send_residue = page_count*USB_PAGE_SIZE;
000024  481f              LDR      r0,|L7.164|
000026  8800              LDRH     r0,[r0,#0]  ; page_count
000028  0240              LSLS     r0,r0,#9
00002a  491f              LDR      r1,|L7.168|
00002c  6008              STR      r0,[r1,#0]  ; send_residue
00002e  e003              B        |L7.56|
                  |L7.48|
;;;426                else
;;;427                    send_residue = page_count;
000030  481c              LDR      r0,|L7.164|
000032  8800              LDRH     r0,[r0,#0]  ; page_count
000034  491c              LDR      r1,|L7.168|
000036  6008              STR      r0,[r1,#0]  ; send_residue
                  |L7.56|
;;;428                usb_running_state = USB_BULK_IN ;
000038  2011              MOVS     r0,#0x11
00003a  4917              LDR      r1,|L7.152|
00003c  7008              STRB     r0,[r1,#0]
;;;429                break ;
00003e  e028              B        |L7.146|
                  |L7.64|
;;;430            }
;;;431        case    USB_BULK_IN:
;;;432            {
;;;433                uint32 cnt = MIN(send_residue,EPn_MAX_PACKAGE_SIZE);
000040  4819              LDR      r0,|L7.168|
000042  6800              LDR      r0,[r0,#0]  ; send_residue
000044  2840              CMP      r0,#0x40
000046  d202              BCS      |L7.78|
000048  4817              LDR      r0,|L7.168|
00004a  6800              LDR      r0,[r0,#0]  ; send_residue
00004c  e000              B        |L7.80|
                  |L7.78|
00004e  2040              MOVS     r0,#0x40
                  |L7.80|
000050  4605              MOV      r5,r0
;;;434    #ifdef USB_DMA_MODE			
;;;435                p_send_buf = device_tx_fifo(p_send_buf,cnt,TRUE);
;;;436    #else
;;;437                p_send_buf = device_tx_fifo(p_send_buf,cnt,FALSE);
000052  2200              MOVS     r2,#0
000054  4629              MOV      r1,r5
000056  4812              LDR      r0,|L7.160|
000058  6800              LDR      r0,[r0,#0]  ; p_send_buf
00005a  f7fffffe          BL       device_tx_fifo
00005e  4910              LDR      r1,|L7.160|
000060  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;438    #endif
;;;439                send_residue -= cnt;
000062  4811              LDR      r0,|L7.168|
000064  6800              LDR      r0,[r0,#0]  ; send_residue
000066  1b40              SUBS     r0,r0,r5
000068  490f              LDR      r1,|L7.168|
00006a  6008              STR      r0,[r1,#0]  ; send_residue
;;;440                if(send_residue == 0 )
00006c  4608              MOV      r0,r1
00006e  6800              LDR      r0,[r0,#0]  ; send_residue
000070  b938              CBNZ     r0,|L7.130|
;;;441                {
;;;442                    USB_Prepare_CSW(send_residue, CSW_CMD_PASSED);
000072  2100              MOVS     r1,#0
000074  480c              LDR      r0,|L7.168|
000076  6800              LDR      r0,[r0,#0]  ; send_residue
000078  f7fffffe          BL       USB_Prepare_CSW
;;;443                    usb_running_state = USB_BULK_CSW;
00007c  2014              MOVS     r0,#0x14
00007e  4906              LDR      r1,|L7.152|
000080  7008              STRB     r0,[r1,#0]
                  |L7.130|
;;;444                }
;;;445                break;
000082  e006              B        |L7.146|
                  |L7.132|
;;;446            }
;;;447        case    USB_BULK_CSW:
;;;448            {
;;;449                SendCSWBack();
000084  f7fffffe          BL       SendCSWBack
;;;450                break ;
000088  e003              B        |L7.146|
                  |L7.138|
;;;451            }
;;;452        default :
;;;453            {
;;;454                usb_running_state = USB_IDLE ;
00008a  20ff              MOVS     r0,#0xff
00008c  4902              LDR      r1,|L7.152|
00008e  7008              STRB     r0,[r1,#0]
;;;455                break ;
000090  bf00              NOP      
                  |L7.146|
000092  bf00              NOP                            ;429
;;;456            }
;;;457        }            
;;;458    }
000094  bd70              POP      {r4-r6,pc}
;;;459    
                          ENDP

000096  0000              DCW      0x0000
                  |L7.152|
                          DCD      usb_running_state
                  |L7.156|
                          DCD      ram_addr
                  |L7.160|
                          DCD      p_send_buf
                  |L7.164|
                          DCD      page_count
                  |L7.168|
                          DCD      send_residue

                          AREA ||i._read_capacity_handle||, CODE, READONLY, ALIGN=2

                  _read_capacity_handle PROC
;;;126    
;;;127    void _read_capacity_handle( void)   							// 0x25
000000  b570              PUSH     {r4-r6,lr}
;;;128    {
;;;129        uint32   temp;
;;;130        switch( usb_running_state )
000002  4823              LDR      r0,|L8.144|
000004  7800              LDRB     r0,[r0,#0]  ; usb_running_state
000006  2810              CMP      r0,#0x10
000008  d004              BEQ      |L8.20|
00000a  2811              CMP      r0,#0x11
00000c  d015              BEQ      |L8.58|
00000e  2814              CMP      r0,#0x14
000010  d138              BNE      |L8.132|
000012  e034              B        |L8.126|
                  |L8.20|
;;;131        {
;;;132        case    USB_BULK_CBW :
;;;133            {
;;;134                temp = ((USB_DISK_OFFSET_END - USB_DISK_OFFSET)>>9) - 1;
000014  2400              MOVS     r4,#0
;;;135                Read_Cap_SendBack[0] = 	(uint8)((temp & 0xff000000) >> 24);
000016  0e20              LSRS     r0,r4,#24
000018  491e              LDR      r1,|L8.148|
00001a  7008              STRB     r0,[r1,#0]
;;;136                Read_Cap_SendBack[1] = 	(uint8)((temp & 0x00ff0000) >> 16);
00001c  0c20              LSRS     r0,r4,#16
00001e  7048              STRB     r0,[r1,#1]
;;;137                Read_Cap_SendBack[2] = 	(uint8)((temp & 0x0000ff00) >>  8);
000020  0a20              LSRS     r0,r4,#8
000022  7088              STRB     r0,[r1,#2]
;;;138                Read_Cap_SendBack[3] = 	(uint8)((temp & 0x000000ff) >>  0);
000024  4608              MOV      r0,r1
000026  70c4              STRB     r4,[r0,#3]
;;;139                p_send_buf = (uint32)Read_Cap_SendBack;
000028  491b              LDR      r1,|L8.152|
00002a  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;140                send_residue = sizeof(Read_Cap_SendBack);
00002c  2008              MOVS     r0,#8
00002e  491b              LDR      r1,|L8.156|
000030  6008              STR      r0,[r1,#0]  ; send_residue
;;;141                usb_running_state = USB_BULK_IN ;
000032  2011              MOVS     r0,#0x11
000034  4916              LDR      r1,|L8.144|
000036  7008              STRB     r0,[r1,#0]
;;;142                break ;
000038  e028              B        |L8.140|
                  |L8.58|
;;;143            }
;;;144        case    USB_BULK_IN :
;;;145            {
;;;146                uint32 cnt = MIN(send_residue,EPn_MAX_PACKAGE_SIZE);
00003a  4818              LDR      r0,|L8.156|
00003c  6800              LDR      r0,[r0,#0]  ; send_residue
00003e  2840              CMP      r0,#0x40
000040  d202              BCS      |L8.72|
000042  4816              LDR      r0,|L8.156|
000044  6800              LDR      r0,[r0,#0]  ; send_residue
000046  e000              B        |L8.74|
                  |L8.72|
000048  2040              MOVS     r0,#0x40
                  |L8.74|
00004a  4605              MOV      r5,r0
;;;147                p_send_buf = device_tx_fifo(p_send_buf,cnt,FALSE);
00004c  2200              MOVS     r2,#0
00004e  4629              MOV      r1,r5
000050  4811              LDR      r0,|L8.152|
000052  6800              LDR      r0,[r0,#0]  ; p_send_buf
000054  f7fffffe          BL       device_tx_fifo
000058  490f              LDR      r1,|L8.152|
00005a  6008              STR      r0,[r1,#0]  ; p_send_buf
;;;148                send_residue -= cnt;
00005c  480f              LDR      r0,|L8.156|
00005e  6800              LDR      r0,[r0,#0]  ; send_residue
000060  1b40              SUBS     r0,r0,r5
000062  490e              LDR      r1,|L8.156|
000064  6008              STR      r0,[r1,#0]  ; send_residue
;;;149                if(send_residue == 0 )
000066  4608              MOV      r0,r1
000068  6800              LDR      r0,[r0,#0]  ; send_residue
00006a  b938              CBNZ     r0,|L8.124|
;;;150                {
;;;151                    USB_Prepare_CSW(send_residue,CSW_CMD_PASSED);
00006c  2100              MOVS     r1,#0
00006e  480b              LDR      r0,|L8.156|
000070  6800              LDR      r0,[r0,#0]  ; send_residue
000072  f7fffffe          BL       USB_Prepare_CSW
;;;152                    usb_running_state = USB_BULK_CSW;
000076  2014              MOVS     r0,#0x14
000078  4905              LDR      r1,|L8.144|
00007a  7008              STRB     r0,[r1,#0]
                  |L8.124|
;;;153                }
;;;154                break ;
00007c  e006              B        |L8.140|
                  |L8.126|
;;;155            }
;;;156        case    USB_BULK_CSW :
;;;157            {
;;;158                SendCSWBack() ;
00007e  f7fffffe          BL       SendCSWBack
;;;159                break ;
000082  e003              B        |L8.140|
                  |L8.132|
;;;160            }
;;;161        default :
;;;162            {
;;;163                usb_running_state = USB_IDLE ;
000084  20ff              MOVS     r0,#0xff
000086  4902              LDR      r1,|L8.144|
000088  7008              STRB     r0,[r1,#0]
;;;164                break ;
00008a  bf00              NOP      
                  |L8.140|
00008c  bf00              NOP                            ;142
;;;165            }
;;;166        }
;;;167    }
00008e  bd70              POP      {r4-r6,pc}
;;;168    void _op_code_23_handle( void)      							// read format capacities
                          ENDP

                  |L8.144|
                          DCD      usb_running_state
                  |L8.148|
                          DCD      Read_Cap_SendBack
                  |L8.152|
                          DCD      p_send_buf
                  |L8.156|
                          DCD      send_residue

                          AREA ||i._sense6_handle||, CODE, READONLY, ALIGN=2

                  _sense6_handle PROC
;;;88     //========================= BULK Command ======================================
;;;89     void _sense6_handle( void)          							// 0x06
000000  b510              PUSH     {r4,lr}
;;;90     {
;;;91         uint8   count ;
;;;92         
;;;93         switch( usb_running_state )
000002  4819              LDR      r0,|L9.104|
000004  7800              LDRB     r0,[r0,#0]  ; usb_running_state
000006  2810              CMP      r0,#0x10
000008  d004              BEQ      |L9.20|
00000a  2811              CMP      r0,#0x11
00000c  d006              BEQ      |L9.28|
00000e  2814              CMP      r0,#0x14
000010  d124              BNE      |L9.92|
000012  e020              B        |L9.86|
                  |L9.20|
;;;94         {
;;;95         case    USB_BULK_CBW :
;;;96             {
;;;97                 usb_running_state = USB_BULK_IN ;
000014  2011              MOVS     r0,#0x11
000016  4914              LDR      r1,|L9.104|
000018  7008              STRB     r0,[r1,#0]
;;;98                 break ;
00001a  e023              B        |L9.100|
                  |L9.28|
;;;99             }
;;;100        case    USB_BULK_IN :
;;;101            {   
;;;102                
;;;103                while(USB->rEP1_CTRL&0x80);
00001c  bf00              NOP      
                  |L9.30|
00001e  4813              LDR      r0,|L9.108|
000020  6800              LDR      r0,[r0,#0]
000022  f0000080          AND      r0,r0,#0x80
000026  2800              CMP      r0,#0
000028  d1f9              BNE      |L9.30|
;;;104                for( count = 0; count < 8; count++ )
00002a  2400              MOVS     r4,#0
00002c  e005              B        |L9.58|
                  |L9.46|
;;;105                {	
;;;106                    USB->rEP1_FIFO = 0;
00002e  2000              MOVS     r0,#0
000030  490e              LDR      r1,|L9.108|
000032  3120              ADDS     r1,r1,#0x20
000034  6008              STR      r0,[r1,#0]
000036  1c60              ADDS     r0,r4,#1              ;104
000038  b2c4              UXTB     r4,r0                 ;104
                  |L9.58|
00003a  2c08              CMP      r4,#8                 ;104
00003c  dbf7              BLT      |L9.46|
;;;107                }
;;;108                
;;;109                USB->rEP1_CTRL = 0x80|count;
00003e  f0440080          ORR      r0,r4,#0x80
000042  490a              LDR      r1,|L9.108|
000044  6008              STR      r0,[r1,#0]
;;;110                USB_Prepare_CSW(0x00,CSW_CMD_PASSED);
000046  2100              MOVS     r1,#0
000048  4608              MOV      r0,r1
00004a  f7fffffe          BL       USB_Prepare_CSW
;;;111                usb_running_state = USB_BULK_CSW ;
00004e  2014              MOVS     r0,#0x14
000050  4905              LDR      r1,|L9.104|
000052  7008              STRB     r0,[r1,#0]
;;;112                break ;
000054  e006              B        |L9.100|
                  |L9.86|
;;;113            }
;;;114        case    USB_BULK_CSW :
;;;115            {
;;;116                SendCSWBack() ;			
000056  f7fffffe          BL       SendCSWBack
;;;117                break ;
00005a  e003              B        |L9.100|
                  |L9.92|
;;;118            }
;;;119        default :
;;;120            {
;;;121                usb_running_state = USB_IDLE ;
00005c  20ff              MOVS     r0,#0xff
00005e  4902              LDR      r1,|L9.104|
000060  7008              STRB     r0,[r1,#0]
;;;122                break ;
000062  bf00              NOP      
                  |L9.100|
000064  bf00              NOP                            ;98
;;;123            }
;;;124        }            
;;;125    }
000066  bd10              POP      {r4,pc}
;;;126    
                          ENDP

                  |L9.104|
                          DCD      usb_running_state
                  |L9.108|
                          DCD      0x40005d44

                          AREA ||i._write10_handle||, CODE, READONLY, ALIGN=2

                  _write10_handle PROC
;;;371    
;;;372    void _write10_handle( uint32 stand_requst)         				// 0x2A
000000  b570              PUSH     {r4-r6,lr}
;;;373    {
000002  4604              MOV      r4,r0
;;;374        switch( usb_running_state ) 
000004  4824              LDR      r0,|L10.152|
000006  7800              LDRB     r0,[r0,#0]  ; usb_running_state
000008  2810              CMP      r0,#0x10
00000a  d004              BEQ      |L10.22|
00000c  2812              CMP      r0,#0x12
00000e  d017              BEQ      |L10.64|
000010  2814              CMP      r0,#0x14
000012  d13a              BNE      |L10.138|
000014  e036              B        |L10.132|
                  |L10.22|
;;;375        {
;;;376        case    USB_BULK_CBW:
;;;377            {
;;;378                covert_usb_2_flash();
000016  f7fffffe          BL       covert_usb_2_flash
;;;379                p_recv_buf = ram_addr;
00001a  4820              LDR      r0,|L10.156|
00001c  6800              LDR      r0,[r0,#0]  ; ram_addr
00001e  4920              LDR      r1,|L10.160|
000020  6008              STR      r0,[r1,#0]  ; p_recv_buf
;;;380                if(stand_requst)
000022  b12c              CBZ      r4,|L10.48|
;;;381                    recv_residue = page_count*USB_PAGE_SIZE ;
000024  481f              LDR      r0,|L10.164|
000026  8800              LDRH     r0,[r0,#0]  ; page_count
000028  0240              LSLS     r0,r0,#9
00002a  491f              LDR      r1,|L10.168|
00002c  6008              STR      r0,[r1,#0]  ; recv_residue
00002e  e003              B        |L10.56|
                  |L10.48|
;;;382                else
;;;383                    recv_residue = page_count;
000030  481c              LDR      r0,|L10.164|
000032  8800              LDRH     r0,[r0,#0]  ; page_count
000034  491c              LDR      r1,|L10.168|
000036  6008              STR      r0,[r1,#0]  ; recv_residue
                  |L10.56|
;;;384                usb_running_state = USB_BULK_OUT;
000038  2012              MOVS     r0,#0x12
00003a  4917              LDR      r1,|L10.152|
00003c  7008              STRB     r0,[r1,#0]
;;;385                break;
00003e  e028              B        |L10.146|
                  |L10.64|
;;;386            }
;;;387        case    USB_BULK_OUT:
;;;388            {
;;;389                uint32 cnt = MIN(recv_residue,EPn_MAX_PACKAGE_SIZE);
000040  4819              LDR      r0,|L10.168|
000042  6800              LDR      r0,[r0,#0]  ; recv_residue
000044  2840              CMP      r0,#0x40
000046  d202              BCS      |L10.78|
000048  4817              LDR      r0,|L10.168|
00004a  6800              LDR      r0,[r0,#0]  ; recv_residue
00004c  e000              B        |L10.80|
                  |L10.78|
00004e  2040              MOVS     r0,#0x40
                  |L10.80|
000050  4605              MOV      r5,r0
;;;390    #ifdef USB_DMA_MODE			
;;;391                p_recv_buf = device_rx_fifo(p_recv_buf,cnt,TRUE);
;;;392    #else
;;;393                p_recv_buf = device_rx_fifo(p_recv_buf,cnt,FALSE);
000052  2200              MOVS     r2,#0
000054  4629              MOV      r1,r5
000056  4812              LDR      r0,|L10.160|
000058  6800              LDR      r0,[r0,#0]  ; p_recv_buf
00005a  f7fffffe          BL       device_rx_fifo
00005e  4910              LDR      r1,|L10.160|
000060  6008              STR      r0,[r1,#0]  ; p_recv_buf
;;;394    #endif
;;;395                recv_residue -= cnt;
000062  4811              LDR      r0,|L10.168|
000064  6800              LDR      r0,[r0,#0]  ; recv_residue
000066  1b40              SUBS     r0,r0,r5
000068  490f              LDR      r1,|L10.168|
00006a  6008              STR      r0,[r1,#0]  ; recv_residue
;;;396                if(recv_residue == 0)
00006c  4608              MOV      r0,r1
00006e  6800              LDR      r0,[r0,#0]  ; recv_residue
000070  b938              CBNZ     r0,|L10.130|
;;;397                {
;;;398                    USB_Prepare_CSW(recv_residue, CSW_CMD_PASSED);
000072  2100              MOVS     r1,#0
000074  480c              LDR      r0,|L10.168|
000076  6800              LDR      r0,[r0,#0]  ; recv_residue
000078  f7fffffe          BL       USB_Prepare_CSW
;;;399                    usb_running_state = USB_BULK_CSW;
00007c  2014              MOVS     r0,#0x14
00007e  4906              LDR      r1,|L10.152|
000080  7008              STRB     r0,[r1,#0]
                  |L10.130|
;;;400                }
;;;401                break ;
000082  e006              B        |L10.146|
                  |L10.132|
;;;402            }
;;;403        case    USB_BULK_CSW:
;;;404            {
;;;405                SendCSWBack();
000084  f7fffffe          BL       SendCSWBack
;;;406                break;
000088  e003              B        |L10.146|
                  |L10.138|
;;;407            }
;;;408        default:
;;;409            {
;;;410                usb_running_state = USB_IDLE;
00008a  20ff              MOVS     r0,#0xff
00008c  4902              LDR      r1,|L10.152|
00008e  7008              STRB     r0,[r1,#0]
;;;411                break;
000090  bf00              NOP      
                  |L10.146|
000092  bf00              NOP                            ;385
;;;412            }
;;;413        }       
;;;414    }
000094  bd70              POP      {r4-r6,pc}
;;;415    
                          ENDP

000096  0000              DCW      0x0000
                  |L10.152|
                          DCD      usb_running_state
                  |L10.156|
                          DCD      ram_addr
                  |L10.160|
                          DCD      p_recv_buf
                  |L10.164|
                          DCD      page_count
                  |L10.168|
                          DCD      recv_residue

                          AREA ||i.covert_usb_2_flash||, CODE, READONLY, ALIGN=2

                  covert_usb_2_flash PROC
;;;345    //=================================== Sub Item Function =======================================
;;;346    void covert_usb_2_flash( void)
000000  2000              MOVS     r0,#0
;;;347    {
;;;348        uint8 count ;
;;;349        
;;;350        for( count = 0; count < 4; count++ )
000002  e006              B        |L11.18|
                  |L11.4|
;;;351        {
;;;352            usb_block_addr[count] = CBWCB[2 + count] ;
000004  1c81              ADDS     r1,r0,#2
000006  4a19              LDR      r2,|L11.108|
000008  5c51              LDRB     r1,[r2,r1]
00000a  4a19              LDR      r2,|L11.112|
00000c  5411              STRB     r1,[r2,r0]
00000e  1c41              ADDS     r1,r0,#1              ;350
000010  b2c8              UXTB     r0,r1                 ;350
                  |L11.18|
000012  2804              CMP      r0,#4                 ;350
000014  dbf6              BLT      |L11.4|
;;;353        }
;;;354        trans_length[0] = (uint16)CBWCB[7] ;
000016  4915              LDR      r1,|L11.108|
000018  79c9              LDRB     r1,[r1,#7]  ; CBWCB
00001a  4a16              LDR      r2,|L11.116|
00001c  8011              STRH     r1,[r2,#0]
;;;355        trans_length[1] = (uint16)CBWCB[8] ;
00001e  4913              LDR      r1,|L11.108|
000020  7a09              LDRB     r1,[r1,#8]  ; CBWCB
000022  8051              STRH     r1,[r2,#2]
;;;356        
;;;357        ram_addr = (((uint32)(usb_block_addr[0]))<<24) | 
000024  4912              LDR      r1,|L11.112|
000026  7809              LDRB     r1,[r1,#0]  ; usb_block_addr
000028  0609              LSLS     r1,r1,#24
00002a  4a11              LDR      r2,|L11.112|
00002c  7852              LDRB     r2,[r2,#1]  ; usb_block_addr
00002e  ea414102          ORR      r1,r1,r2,LSL #16
000032  4a0f              LDR      r2,|L11.112|
000034  7892              LDRB     r2,[r2,#2]  ; usb_block_addr
000036  ea412102          ORR      r1,r1,r2,LSL #8
00003a  4a0d              LDR      r2,|L11.112|
00003c  78d2              LDRB     r2,[r2,#3]  ; usb_block_addr
00003e  4311              ORRS     r1,r1,r2
000040  4a0d              LDR      r2,|L11.120|
000042  6011              STR      r1,[r2,#0]  ; ram_addr
;;;358            (((uint32)(usb_block_addr[1]))<<16) | 
;;;359                (((uint32)(usb_block_addr[2]))<< 8) |
;;;360                    (((uint32)(usb_block_addr[3]))<< 0);
;;;361        
;;;362        
;;;363        ram_addr = ((ram_addr<<9) + USB_DISK_OFFSET);
000044  4611              MOV      r1,r2
000046  6809              LDR      r1,[r1,#0]  ; ram_addr
000048  4a0c              LDR      r2,|L11.124|
00004a  eb022141          ADD      r1,r2,r1,LSL #9
00004e  4a0a              LDR      r2,|L11.120|
000050  6011              STR      r1,[r2,#0]  ; ram_addr
;;;364        
;;;365        page_count = ((trans_length[0]&0x00ff)<<8) | (trans_length[1] & 0x00ff);
000052  4908              LDR      r1,|L11.116|
000054  8809              LDRH     r1,[r1,#0]  ; trans_length
000056  b2ca              UXTB     r2,r1
000058  4906              LDR      r1,|L11.116|
00005a  8849              LDRH     r1,[r1,#2]  ; trans_length
00005c  f362211f          BFI      r1,r2,#8,#24
000060  4a07              LDR      r2,|L11.128|
000062  8011              STRH     r1,[r2,#0]
;;;366        buf_count = USB_PAGE_SIZE/EPn_MAX_PACKAGE_SIZE;
000064  2108              MOVS     r1,#8
000066  4a07              LDR      r2,|L11.132|
000068  7011              STRB     r1,[r2,#0]
;;;367        
;;;368    }
00006a  4770              BX       lr
;;;369    
                          ENDP

                  |L11.108|
                          DCD      CBWCB
                  |L11.112|
                          DCD      usb_block_addr
                  |L11.116|
                          DCD      trans_length
                  |L11.120|
                          DCD      ram_addr
                  |L11.124|
                          DCD      0x40006000
                  |L11.128|
                          DCD      page_count
                  |L11.132|
                          DCD      buf_count

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Op_23_SendBack
                          %        12
                  usb_csw_buf
                          %        13

                          AREA ||.data||, DATA, ALIGN=2

                  debug_flag
                          DCD      0x00000000
                  InquriySendBack
000004  00800001          DCB      0x00,0x80,0x00,0x01
000008  1f000000          DCB      0x1f,0x00,0x00,0x00
00000c  47656e65          DCB      0x47,0x65,0x6e,0x65
000010  72696320          DCB      0x72,0x69,0x63,0x20
000014  55534220          DCB      0x55,0x53,0x42,0x20
000018  53746f72          DCB      0x53,0x74,0x6f,0x72
00001c  6167652d          DCB      0x61,0x67,0x65,0x2d
000020  53434335          DCB      0x53,0x43,0x43,0x35
000024  30313130          DCB      0x30,0x31,0x31,0x30
                  SenseData
000028  70000000          DCB      0x70,0x00,0x00,0x00
00002c  0000000a          DCB      0x00,0x00,0x00,0x0a
000030  00000000          DCB      0x00,0x00,0x00,0x00
000034  00000000          DCB      0x00,0x00,0x00,0x00
000038  0000              DCB      0x00,0x00
                  Read_Cap_SendBack
00003a  0000              DCB      0x00,0x00
00003c  003c0000          DCB      0x00,0x3c,0x00,0x00
000040  0200              DCB      0x02,0x00
                  usb_block_addr
000042  0000              DCB      0x00,0x00
000044  0000              DCB      0x00,0x00
                  trans_length
000046  0000              DCB      0x00,0x00
000048  00000000          DCB      0x00,0x00,0x00,0x00
                  ram_addr
                          DCD      0x00000000
                  page_count
000050  0000              DCB      0x00,0x00
                  buf_count
000052  00                DCB      0x00
                  flash_block_addr
000053  00                DCB      0x00
000054  00000000          DCB      0x00,0x00,0x00,0x00
                  flash_count
                          DCD      0x00000000
                  dma_finished_flag
00005c  0000              DCB      0x00,0x00
                  write_finish
00005e  0000              DCB      0x00,0x00
                  p_send_buf
                          DCD      0x00000000
                  p_recv_buf
                          DCD      0x00000000
                  send_residue
                          DCD      0x00000000
                  recv_residue
                          DCD      0x00000000
                  usb_in_stall_ix
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "..\\bsp\\usblib\\bulkitem.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bulkitem_c_5eee03a3____REV16|
#line 129 "..\\..\\..\\..\\..\\Device\\CMSIS\\KEIL_CORE\\core_cmInstr.h"
|__asm___10_bulkitem_c_5eee03a3____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bulkitem_c_5eee03a3____REVSH|
#line 144
|__asm___10_bulkitem_c_5eee03a3____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_bulkitem_c_5eee03a3____RRX|
#line 300
|__asm___10_bulkitem_c_5eee03a3____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
