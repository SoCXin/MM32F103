; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\key.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\key.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\bsp -I..\bsp\test -I..\bsp\usblib -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\uart -I..\..\..\..\..\Device\MM32F103\Include -I..\HARDWARE\KEY -I..\..\..\..\..\Device\CMSIS\KEIL_CORE -IF:\work\8月\F103n、F031n样例制作\MM32F103RegLib_MiniBoard_Ver1.0.0\MM32F103RegLib_MiniBoard_libReg\MBF103PF_reg\USB\USB_Keyboard\KEIL_PRJ\RTE\_projectgroup -IC:\Keil_v5\ARM\PACK\MindMotion\MM32F103_DFP\1.4.3\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\PACK\MindMotion\MM32L3xx_DFP\1.0.3\Device\MM32L3xx\Include -D__UVISION_VERSION=522 -DMM32F103CBT -DF103_N_VERSION --omf_browse=.\objects\key.crf ..\HARDWARE\KEY\key.c]
                          THUMB

                          AREA ||i.KEY_Init||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;6      //PA0 PC13 PB10 PB11设置成输入
;;;7      void KEY_Init(void)
000000  481f              LDR      r0,|L1.128|
;;;8      {
;;;9          
;;;10         
;;;11         RCC->APB2ENR|=RCC_APB2ENR_IOPAEN;   //RCC->APB2ENR|=1<<2;  //使能GPIOA时钟	   	 
000002  6980              LDR      r0,[r0,#0x18]
000004  f0400004          ORR      r0,r0,#4
000008  491d              LDR      r1,|L1.128|
00000a  6188              STR      r0,[r1,#0x18]
;;;12         RCC->APB2ENR|=RCC_APB2ENR_IOPBEN;   //RCC->APB2ENR|=1<<3;  //使能GPIOB时钟	   	 
00000c  4608              MOV      r0,r1
00000e  6980              LDR      r0,[r0,#0x18]
000010  f0400008          ORR      r0,r0,#8
000014  6188              STR      r0,[r1,#0x18]
;;;13         RCC->APB2ENR|=RCC_APB2ENR_IOPCEN;   //RCC->APB2ENR|=1<<4;  //使能GPIOC时钟	   
000016  4608              MOV      r0,r1
000018  6980              LDR      r0,[r0,#0x18]
00001a  f0400010          ORR      r0,r0,#0x10
00001e  6188              STR      r0,[r1,#0x18]
;;;14         
;;;15         GPIOA->CRL&=0XFFFFFFF0;	//PA0设置成输入	,K2(WK_UP)
000020  4818              LDR      r0,|L1.132|
000022  6800              LDR      r0,[r0,#0]
000024  f020000f          BIC      r0,r0,#0xf
000028  4916              LDR      r1,|L1.132|
00002a  6008              STR      r0,[r1,#0]
;;;16         GPIOA->CRL|=GPIO_CRL_CNF0_1;   
00002c  4608              MOV      r0,r1
00002e  6800              LDR      r0,[r0,#0]
000030  f0400008          ORR      r0,r0,#8
000034  6008              STR      r0,[r1,#0]
;;;17         
;;;18         GPIOC->CRH&=0XFF0FFFFF;	//PC13设置成输入,K1	  
000036  4814              LDR      r0,|L1.136|
000038  6840              LDR      r0,[r0,#4]
00003a  f4200070          BIC      r0,r0,#0xf00000
00003e  4912              LDR      r1,|L1.136|
000040  6048              STR      r0,[r1,#4]
;;;19         GPIOC->CRH|=GPIO_CRH_CNF13_1;   
000042  4608              MOV      r0,r1
000044  6840              LDR      r0,[r0,#4]
000046  f4400000          ORR      r0,r0,#0x800000
00004a  6048              STR      r0,[r1,#4]
;;;20         GPIOC->ODR|=GPIO_ODR_ODR13;	   	//PC13上拉 
00004c  4608              MOV      r0,r1
00004e  68c0              LDR      r0,[r0,#0xc]
000050  f4405000          ORR      r0,r0,#0x2000
000054  60c8              STR      r0,[r1,#0xc]
;;;21         
;;;22         GPIOB->CRH&=0XFFFF00FF;	//PB10,PB11设置成输入,K3,K4	  
000056  480d              LDR      r0,|L1.140|
000058  6800              LDR      r0,[r0,#0]
00005a  f420407f          BIC      r0,r0,#0xff00
00005e  490b              LDR      r1,|L1.140|
000060  6008              STR      r0,[r1,#0]
;;;23         GPIOB->CRH|=GPIO_CRH_CNF10_1|GPIO_CRH_CNF11_1;   
000062  4608              MOV      r0,r1
000064  6800              LDR      r0,[r0,#0]
000066  f4404008          ORR      r0,r0,#0x8800
00006a  6008              STR      r0,[r1,#0]
;;;24         GPIOB->ODR|=GPIO_ODR_ODR10|GPIO_ODR_ODR11;	   	//PB10,PB11上拉 
00006c  4807              LDR      r0,|L1.140|
00006e  3008              ADDS     r0,r0,#8
000070  6800              LDR      r0,[r0,#0]
000072  f4406040          ORR      r0,r0,#0xc00
000076  4905              LDR      r1,|L1.140|
000078  3108              ADDS     r1,r1,#8
00007a  6008              STR      r0,[r1,#0]
;;;25         
;;;26     } 
00007c  4770              BX       lr
;;;27     //按键处理函数
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      0x40021000
                  |L1.132|
                          DCD      0x40010800
                  |L1.136|
                          DCD      0x40011000
                  |L1.140|
                          DCD      0x40010c04

                          AREA ||i.KEY_Scan||, CODE, READONLY, ALIGN=2

                  KEY_Scan PROC
;;;35     //KEY4_PRES，KEY4按下
;;;36     u8 KEY_Scan(u8 mode)
000000  4602              MOV      r2,r0
;;;37     {	 
;;;38         u32 delay;
;;;39         static u8 key_up=1;//按键按松开标志
;;;40         if(mode)key_up=1;  //支持连按		  
000002  b112              CBZ      r2,|L2.10|
000004  2001              MOVS     r0,#1
000006  4b24              LDR      r3,|L2.152|
000008  7018              STRB     r0,[r3,#0]
                  |L2.10|
;;;41         if(key_up&&(KEY1==0||WK_UP==1||KEY3==0||KEY4==0))
00000a  4823              LDR      r0,|L2.152|
00000c  7800              LDRB     r0,[r0,#0]  ; key_up
00000e  2800              CMP      r0,#0
000010  d02d              BEQ      |L2.110|
000012  4822              LDR      r0,|L2.156|
000014  6800              LDR      r0,[r0,#0]
000016  b150              CBZ      r0,|L2.46|
000018  4821              LDR      r0,|L2.160|
00001a  6800              LDR      r0,[r0,#0]
00001c  2801              CMP      r0,#1
00001e  d006              BEQ      |L2.46|
000020  4820              LDR      r0,|L2.164|
000022  6800              LDR      r0,[r0,#0]
000024  b118              CBZ      r0,|L2.46|
000026  481f              LDR      r0,|L2.164|
000028  1d00              ADDS     r0,r0,#4
00002a  6800              LDR      r0,[r0,#0]
00002c  b9f8              CBNZ     r0,|L2.110|
                  |L2.46|
;;;42         {
;;;43             for(delay=0;delay<10000;delay++);//去抖动 
00002e  2100              MOVS     r1,#0
000030  e000              B        |L2.52|
                  |L2.50|
000032  1c49              ADDS     r1,r1,#1
                  |L2.52|
000034  f2427010          MOV      r0,#0x2710
000038  4281              CMP      r1,r0
00003a  d3fa              BCC      |L2.50|
;;;44             key_up=0;
00003c  2000              MOVS     r0,#0
00003e  4b16              LDR      r3,|L2.152|
000040  7018              STRB     r0,[r3,#0]
;;;45             if(KEY1==0)return KEY1_PRES;
000042  4816              LDR      r0,|L2.156|
000044  6800              LDR      r0,[r0,#0]
000046  b908              CBNZ     r0,|L2.76|
000048  2001              MOVS     r0,#1
                  |L2.74|
;;;46             else if(WK_UP==1)return WKUP_PRES; 
;;;47             else if(KEY3==0)return KEY3_PRES;
;;;48             else if(KEY4==0)return KEY4_PRES;
;;;49         }else if(KEY1==1&&KEY3==1&&KEY4==1&&WK_UP==0)key_up=1; 	     
;;;50         return 0;// 无按键按下
;;;51     }
00004a  4770              BX       lr
                  |L2.76|
00004c  4814              LDR      r0,|L2.160|
00004e  6800              LDR      r0,[r0,#0]            ;46
000050  2801              CMP      r0,#1                 ;46
000052  d101              BNE      |L2.88|
000054  2002              MOVS     r0,#2                 ;46
000056  e7f8              B        |L2.74|
                  |L2.88|
000058  4812              LDR      r0,|L2.164|
00005a  6800              LDR      r0,[r0,#0]            ;47
00005c  b908              CBNZ     r0,|L2.98|
00005e  2003              MOVS     r0,#3                 ;47
000060  e7f3              B        |L2.74|
                  |L2.98|
000062  4810              LDR      r0,|L2.164|
000064  1d00              ADDS     r0,r0,#4              ;48
000066  6800              LDR      r0,[r0,#0]            ;48
000068  b9a0              CBNZ     r0,|L2.148|
00006a  2004              MOVS     r0,#4                 ;48
00006c  e7ed              B        |L2.74|
                  |L2.110|
00006e  480b              LDR      r0,|L2.156|
000070  6800              LDR      r0,[r0,#0]            ;49
000072  2801              CMP      r0,#1                 ;49
000074  d10e              BNE      |L2.148|
000076  480b              LDR      r0,|L2.164|
000078  6800              LDR      r0,[r0,#0]            ;49
00007a  2801              CMP      r0,#1                 ;49
00007c  d10a              BNE      |L2.148|
00007e  4809              LDR      r0,|L2.164|
000080  1d00              ADDS     r0,r0,#4              ;49
000082  6800              LDR      r0,[r0,#0]            ;49
000084  2801              CMP      r0,#1                 ;49
000086  d105              BNE      |L2.148|
000088  4805              LDR      r0,|L2.160|
00008a  6800              LDR      r0,[r0,#0]            ;49
00008c  b910              CBNZ     r0,|L2.148|
00008e  2001              MOVS     r0,#1                 ;49
000090  4b01              LDR      r3,|L2.152|
000092  7018              STRB     r0,[r3,#0]            ;49
                  |L2.148|
000094  2000              MOVS     r0,#0                 ;50
000096  e7d8              B        |L2.74|
;;;52     
                          ENDP

                  |L2.152|
                          DCD      key_up
                  |L2.156|
                          DCD      0x42220134
                  |L2.160|
                          DCD      0x42210100
                  |L2.164|
                          DCD      0x42218128

                          AREA ||.data||, DATA, ALIGN=0

                  key_up
000000  01                DCB      0x01

;*** Start embedded assembler ***

#line 1 "..\\HARDWARE\\KEY\\key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____REV16|
#line 129 "..\\..\\..\\..\\..\\Device\\CMSIS\\KEIL_CORE\\core_cmInstr.h"
|__asm___5_key_c_KEY_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____REVSH|
#line 144
|__asm___5_key_c_KEY_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____RRX|
#line 300
|__asm___5_key_c_KEY_Init____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
